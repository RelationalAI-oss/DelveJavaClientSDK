/*
 * Delve Client SDK
 * This is a Client SDK for Delve API
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@relational.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.AnyValue;
import org.openapitools.client.model.FileSchema;
import org.openapitools.client.model.FileSyntax;

/**
 * LoadData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LoadData {
  public static final String SERIALIZED_NAME_CONTENT_TYPE = "content_type";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType = "";

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private String data = "";

  public static final String SERIALIZED_NAME_PATH = "path";
  @SerializedName(SERIALIZED_NAME_PATH)
  private String path = "";

  public static final String SERIALIZED_NAME_KEY = "key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private AnyValue key;

  public static final String SERIALIZED_NAME_FILE_SYNTAX = "file_syntax";
  @SerializedName(SERIALIZED_NAME_FILE_SYNTAX)
  private FileSyntax fileSyntax;

  public static final String SERIALIZED_NAME_FILE_SCHEMA = "file_schema";
  @SerializedName(SERIALIZED_NAME_FILE_SCHEMA)
  private FileSchema fileSchema;

  /**
   * Gets or Sets objtp
   */
  @JsonAdapter(ObjtpEnum.Adapter.class)
  public enum ObjtpEnum {
    LOADDATA("LoadData");

    private String value;

    ObjtpEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObjtpEnum fromValue(String value) {
      for (ObjtpEnum b : ObjtpEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ObjtpEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObjtpEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObjtpEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ObjtpEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_OBJTP = "objtp";
  @SerializedName(SERIALIZED_NAME_OBJTP)
  private ObjtpEnum objtp = ObjtpEnum.LOADDATA;


  public LoadData contentType(String contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * Get contentType
   * @return contentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContentType() {
    return contentType;
  }


  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  public LoadData data(String data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getData() {
    return data;
  }


  public void setData(String data) {
    this.data = data;
  }


  public LoadData path(String path) {
    
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPath() {
    return path;
  }


  public void setPath(String path) {
    this.path = path;
  }


  public LoadData key(AnyValue key) {
    
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AnyValue getKey() {
    return key;
  }


  public void setKey(AnyValue key) {
    this.key = key;
  }


  public LoadData fileSyntax(FileSyntax fileSyntax) {
    
    this.fileSyntax = fileSyntax;
    return this;
  }

   /**
   * Get fileSyntax
   * @return fileSyntax
  **/
  @ApiModelProperty(required = true, value = "")

  public FileSyntax getFileSyntax() {
    return fileSyntax;
  }


  public void setFileSyntax(FileSyntax fileSyntax) {
    this.fileSyntax = fileSyntax;
  }


  public LoadData fileSchema(FileSchema fileSchema) {
    
    this.fileSchema = fileSchema;
    return this;
  }

   /**
   * Get fileSchema
   * @return fileSchema
  **/
  @ApiModelProperty(required = true, value = "")

  public FileSchema getFileSchema() {
    return fileSchema;
  }


  public void setFileSchema(FileSchema fileSchema) {
    this.fileSchema = fileSchema;
  }


  public LoadData objtp(ObjtpEnum objtp) {
    
    this.objtp = objtp;
    return this;
  }

   /**
   * Get objtp
   * @return objtp
  **/
  @ApiModelProperty(required = true, value = "")

  public ObjtpEnum getObjtp() {
    return objtp;
  }


  public void setObjtp(ObjtpEnum objtp) {
    this.objtp = objtp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoadData loadData = (LoadData) o;
    return Objects.equals(this.contentType, loadData.contentType) &&
        Objects.equals(this.data, loadData.data) &&
        Objects.equals(this.path, loadData.path) &&
        Objects.equals(this.key, loadData.key) &&
        Objects.equals(this.fileSyntax, loadData.fileSyntax) &&
        Objects.equals(this.fileSchema, loadData.fileSchema) &&
        Objects.equals(this.objtp, loadData.objtp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentType, data, path, key, fileSyntax, fileSchema, objtp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoadData {\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    fileSyntax: ").append(toIndentedString(fileSyntax)).append("\n");
    sb.append("    fileSchema: ").append(toIndentedString(fileSchema)).append("\n");
    sb.append("    objtp: ").append(toIndentedString(objtp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

